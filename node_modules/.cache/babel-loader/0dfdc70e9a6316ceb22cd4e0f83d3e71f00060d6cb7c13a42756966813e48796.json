{"ast":null,"code":"export default {\n  data() {\n    return {\n      products: [{\n        name: 'Apples',\n        price: 2.5,\n        quantity: 50,\n        image: 'https://via.placeholder.com/150'\n      }, {\n        name: 'Oranges',\n        price: 3,\n        quantity: 30,\n        image: 'https://via.placeholder.com/150'\n      }, {\n        name: 'Oranges',\n        price: 3,\n        quantity: 30,\n        image: 'https://via.placeholder.com/150'\n      }, {\n        name: 'Oranges',\n        price: 3,\n        quantity: 30,\n        image: 'https://via.placeholder.com/150'\n      }\n\n      // Add more products here with respective images\n      ],\n\n      orderQuantities: [],\n      // Store order quantities\n      marketProduct: 'Apples',\n      // Default product for market price\n      marketPrice: 0 // Placeholder for market price\n    };\n  },\n\n  methods: {\n    placeOrder(index) {\n      const orderedQuantity = this.orderQuantities[index];\n      if (orderedQuantity > 0 && orderedQuantity <= this.products[index].quantity) {\n        // Calculate total cost for the customer\n        const totalPrice = orderedQuantity * this.products[index].price;\n\n        // Perform actions like updating quantity, handling orders, etc.\n        this.products[index].quantity -= orderedQuantity;\n\n        // Display a message or perform additional actions for order handling\n        alert(`Order placed for ${orderedQuantity} ${this.products[index].name} for a total of $${totalPrice}`);\n\n        // Reset order quantity input\n        this.orderQuantities[index] = 0;\n      } else {\n        alert('Invalid quantity or not enough in stock!');\n      }\n    },\n    fetchMarketPrice() {\n      // Simulated API call or backend integration to fetch market price\n      // Replace with actual API integration\n      // Here, it's randomly generating a price for demonstration purposes\n      this.marketPrice = Math.random() * 10 + 1; // Random price between 1 and 10\n    }\n  },\n\n  created() {\n    // Fetch initial market price details\n    this.fetchMarketPrice();\n  }\n};","map":{"version":3,"names":["data","products","name","price","quantity","image","orderQuantities","marketProduct","marketPrice","methods","placeOrder","index","orderedQuantity","totalPrice","alert","fetchMarketPrice","Math","random","created"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\GraphDesign.vue"],"sourcesContent":["<template>\r\n<div class=\"container1\">\r\n <h1>\r\n      <span class=\"farmers\">Farmers</span>\r\n      <span class=\"market\">Market</span>\r\n    </h1>\r\n</div>\r\n  <div class=\"container\">\r\n  \r\n\r\n    <!-- Display available products -->\r\n    <div v-for=\"(product, index) in products\" :key=\"index\" class=\"product\">\r\n      <img :src=\"require(`@/assets/${product.image}`)\" :alt=\"product.name\" class=\"product-image\" />\r\n      <div class=\"product-details\">\r\n        <h2>{{ product.name }}</h2>\r\n        <p>Price: ${{ product.price }}</p>\r\n        <p>Available Quantity: {{ product.quantity }}</p>\r\n\r\n        <!-- Input for customer order -->\r\n        <div v-if=\"product.quantity > 0\">\r\n          <label for=\"orderQty\">Order Quantity:</label>\r\n          <input type=\"number\" v-model=\"orderQuantities[index]\" min=\"0\" :max=\"product.quantity\" />\r\n          <button @click=\"placeOrder(index)\">Place Order</button>\r\n        </div>\r\n      </div>\r\n\r\n      <hr class=\"divider\" />\r\n    </div>\r\n\r\n    <!-- Display market price details -->\r\n    <h2>Market Price Details</h2>\r\n    <p v-if=\"marketPrice\">Market Price for {{ marketProduct }}: ${{ marketPrice }}</p>\r\n    <p v-else>No market price available for {{ marketProduct }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [\r\n        { name: 'Apples', price: 2.5, quantity: 50, image: 'https://via.placeholder.com/150' },\r\n         { name: 'Oranges', price: 3, quantity: 30, image: 'https://via.placeholder.com/150' },\r\n          { name: 'Oranges', price: 3, quantity: 30, image: 'https://via.placeholder.com/150' },\r\n           { name: 'Oranges', price: 3, quantity: 30, image: 'https://via.placeholder.com/150' },\r\n       \r\n       \r\n        // Add more products here with respective images\r\n      ],\r\n      orderQuantities: [], // Store order quantities\r\n      marketProduct: 'Apples', // Default product for market price\r\n      marketPrice: 0 // Placeholder for market price\r\n    };\r\n  },\r\n  methods: {\r\n    placeOrder(index) {\r\n      const orderedQuantity = this.orderQuantities[index];\r\n      if (orderedQuantity > 0 && orderedQuantity <= this.products[index].quantity) {\r\n        // Calculate total cost for the customer\r\n        const totalPrice = orderedQuantity * this.products[index].price;\r\n\r\n        // Perform actions like updating quantity, handling orders, etc.\r\n        this.products[index].quantity -= orderedQuantity;\r\n\r\n        // Display a message or perform additional actions for order handling\r\n        alert(`Order placed for ${orderedQuantity} ${this.products[index].name} for a total of $${totalPrice}`);\r\n\r\n        // Reset order quantity input\r\n        this.orderQuantities[index] = 0;\r\n      } else {\r\n        alert('Invalid quantity or not enough in stock!');\r\n      }\r\n    },\r\n    fetchMarketPrice() {\r\n      // Simulated API call or backend integration to fetch market price\r\n      // Replace with actual API integration\r\n      // Here, it's randomly generating a price for demonstration purposes\r\n      this.marketPrice = Math.random() * 10 + 1; // Random price between 1 and 10\r\n    }\r\n  },\r\n  created() {\r\n    // Fetch initial market price details\r\n    this.fetchMarketPrice();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100vw;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n    text-align: center;\r\n\r\n  background-color: #f7f7f7;\r\n  overflow-y: auto;\r\n}\r\n.container1 {\r\n    text-align: center;\r\n \r\n}\r\n\r\n.product {\r\n  width: calc(25% - 20px);\r\n  min-width: 200px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.product:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  transition: filter 0.3s ease;\r\n}\r\n\r\n.product:hover .product-image {\r\n  filter: brightness(80%);\r\n}\r\n\r\n.product-details {\r\n  padding: 20px;\r\n}\r\n\r\n.product h2 {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product p {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.product button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.product button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.divider {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ccc;\r\n}\r\n.farmers {\r\n  color: #ff6347; /* Different color for 'Farmers' */\r\n}\r\n\r\n.market {\r\n  color: #4682b4; /* Different color for 'Market' */\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAqCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,GAAG;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAkC,CAAC,EACrF;QAAEH,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAkC,CAAC,EACpF;QAAEH,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAkC,CAAC,EACpF;QAAEH,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAkC;;MAGvF;MAAA,CACD;;MACDC,eAAe,EAAE,EAAE;MAAE;MACrBC,aAAa,EAAE,QAAQ;MAAE;MACzBC,WAAW,EAAE,EAAE;IACjB,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAE;MAChB,MAAMC,eAAc,GAAI,IAAI,CAACN,eAAe,CAACK,KAAK,CAAC;MACnD,IAAIC,eAAc,GAAI,KAAKA,eAAc,IAAK,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACP,QAAQ,EAAE;QAC3E;QACA,MAAMS,UAAS,GAAID,eAAc,GAAI,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACR,KAAK;;QAE/D;QACA,IAAI,CAACF,QAAQ,CAACU,KAAK,CAAC,CAACP,QAAO,IAAKQ,eAAe;;QAEhD;QACAE,KAAK,CAAE,oBAAmBF,eAAe,IAAI,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACT,IAAI,oBAAoBW,UAAW,EAAC,CAAC;;QAEvG;QACA,IAAI,CAACP,eAAe,CAACK,KAAK,IAAI,CAAC;MACjC,OAAO;QACLG,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB;MACA;MACA;MACA,IAAI,CAACP,WAAU,GAAIQ,IAAI,CAACC,MAAM,CAAC,IAAI,EAAC,GAAI,CAAC,EAAE;IAC7C;EACF,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACH,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}