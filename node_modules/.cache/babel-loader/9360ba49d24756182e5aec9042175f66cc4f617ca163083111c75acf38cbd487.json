{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Farmers Market\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"orderQty\"\n}, \"Order Quantity:\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"max\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Market Price Details\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Display available products \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Price: $\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Available Quantity: \" + _toDisplayString(product.quantity), 1 /* TEXT */), _createCommentVNode(\" Input for customer order \"), product.quantity > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => $data.orderQuantities[index] = $event,\n      min: \"0\",\n      max: product.quantity\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, $data.orderQuantities[index]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.placeOrder(index)\n    }, \"Place Order\", 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true), _hoisted_6]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Display market price details \"), _hoisted_7, $data.marketPrice ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Market Price for \" + _toDisplayString($data.marketProduct) + \": $\" + _toDisplayString($data.marketPrice), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"No market price available for \" + _toDisplayString($data.marketProduct), 1 /* TEXT */))]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","products","product","index","key","_toDisplayString","name","price","quantity","_hoisted_2","_hoisted_3","type","orderQuantities","$event","min","max","onClick","$options","placeOrder","_hoisted_5","_hoisted_6","_hoisted_7","marketPrice","_hoisted_8","marketProduct","_hoisted_9"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\GraphDesign.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Farmers Market</h1>\r\n\r\n    <!-- Display available products -->\r\n    <div v-for=\"(product, index) in products\" :key=\"index\">\r\n      <h2>{{ product.name }}</h2>\r\n      <p>Price: ${{ product.price }}</p>\r\n      <p>Available Quantity: {{ product.quantity }}</p>\r\n\r\n      <!-- Input for customer order -->\r\n      <div v-if=\"product.quantity > 0\">\r\n        <label for=\"orderQty\">Order Quantity:</label>\r\n        <input type=\"number\" v-model=\"orderQuantities[index]\" min=\"0\" :max=\"product.quantity\" />\r\n        <button @click=\"placeOrder(index)\">Place Order</button>\r\n      </div>\r\n\r\n      <hr />\r\n    </div>\r\n\r\n    <!-- Display market price details -->\r\n    <h2>Market Price Details</h2>\r\n    <p v-if=\"marketPrice\">Market Price for {{ marketProduct }}: ${{ marketPrice }}</p>\r\n    <p v-else>No market price available for {{ marketProduct }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [\r\n        { name: 'Apples', price: 2.5, quantity: 50 },\r\n        { name: 'Oranges', price: 3, quantity: 30 },\r\n        // Add more products here\r\n      ],\r\n      orderQuantities: [], // Store order quantities\r\n      marketProduct: 'Apples', // Default product for market price\r\n      marketPrice: 0 // Placeholder for market price\r\n    };\r\n  },\r\n  methods: {\r\n    placeOrder(index) {\r\n      const orderedQuantity = this.orderQuantities[index];\r\n      if (orderedQuantity > 0 && orderedQuantity <= this.products[index].quantity) {\r\n        // Calculate total cost for the customer\r\n        const totalPrice = orderedQuantity * this.products[index].price;\r\n\r\n        // Perform actions like updating quantity, handling orders, etc.\r\n        this.products[index].quantity -= orderedQuantity;\r\n\r\n        // Display a message or perform additional actions for order handling\r\n        alert(`Order placed for ${orderedQuantity} ${this.products[index].name} for a total of $${totalPrice}`);\r\n\r\n        // Reset order quantity input\r\n        this.orderQuantities[index] = 0;\r\n      } else {\r\n        alert('Invalid quantity or not enough in stock!');\r\n      }\r\n    },\r\n    fetchMarketPrice() {\r\n      // Simulated API call or backend integration to fetch market price\r\n      // Replace with actual API integration\r\n      // Here, it's randomly generating a price for demonstration purposes\r\n      this.marketPrice = Math.random() * 10 + 1; // Random price between 1 and 10\r\n    }\r\n  },\r\n  created() {\r\n    // Fetch initial market price details\r\n    this.fetchMarketPrice();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your CSS styles here if needed */\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAuB,YAAnB,gBAAc;;;;gCAUdA,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAU,GAAC,iBAAe;;;gCAKvCD,mBAAA,CAAM;gCAIRA,mBAAA,CAA6B,YAAzB,sBAAoB;;;;;;;;uBApB1BE,mBAAA,CAuBM,cAtBJC,UAAuB,EAEvBC,mBAAA,gCAAmC,G,kBACnCF,mBAAA,CAaMG,SAAA,QAAAC,WAAA,CAb0BC,KAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA3BR,mBAAA,CAaM;MAbqCS,GAAG,EAAED;IAAK,IACnDV,mBAAA,CAA2B,YAAAY,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBb,mBAAA,CAAkC,WAA/B,UAAQ,GAAAY,gBAAA,CAAGH,OAAO,CAACK,KAAK,kBAC3Bd,mBAAA,CAAiD,WAA9C,sBAAoB,GAAAY,gBAAA,CAAGH,OAAO,CAACM,QAAQ,kBAE1CX,mBAAA,8BAAiC,EACtBK,OAAO,CAACM,QAAQ,Q,cAA3Bb,mBAAA,CAIM,OAAAc,UAAA,GAHJC,UAA6C,E,gBAC7CjB,mBAAA,CAAwF;MAAjFkB,IAAI,EAAC,QAAQ;uCAAUX,KAAA,CAAAY,eAAe,CAACT,KAAK,IAAAU,MAAA;MAAGC,GAAG,EAAC,GAAG;MAAEC,GAAG,EAAEb,OAAO,CAACM;wDAA9CR,KAAA,CAAAY,eAAe,CAACT,KAAK,G,GACnDV,mBAAA,CAAuD;MAA9CuB,OAAK,EAAAH,MAAA,IAAEI,QAAA,CAAAC,UAAU,CAACf,KAAK;OAAG,aAAW,iBAAAgB,UAAA,E,wCAGhDC,UAAM,C;kCAGRvB,mBAAA,kCAAqC,EACrCwB,UAA6B,EACpBrB,KAAA,CAAAsB,WAAW,I,cAApB3B,mBAAA,CAAkF,KAAA4B,UAAA,EAA5D,mBAAiB,GAAAlB,gBAAA,CAAGL,KAAA,CAAAwB,aAAa,IAAG,KAAG,GAAAnB,gBAAA,CAAGL,KAAA,CAAAsB,WAAW,qB,cAC3E3B,mBAAA,CAA+D,KAAA8B,UAAA,EAArD,gCAA8B,GAAApB,gBAAA,CAAGL,KAAA,CAAAwB,aAAa,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}