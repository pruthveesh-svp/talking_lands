{"ast":null,"code":"// Importing necessary Vue functions and Leaflet library\nimport { onUnmounted } from 'vue';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      // To store user's search input\n      leafletMap: null // Reference to the Leaflet map\n    };\n  },\n\n  methods: {\n    // Function to get user's current location\n    getUserLocation() {\n      // Code to get user's location...\n    },\n    // Function to search for a location\n    searchLocation() {\n      const accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN'; // Replace with your Mapbox access token\n      const query = this.searchQuery;\n\n      // Fetching location data from Mapbox API based on the user's input\n      fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(query)}.json?access_token=${accessToken}`).then(response => response.json()).then(data => {\n        const [longitude, latitude] = data.features[0].center;\n        if (this.leafletMap) {\n          // Setting the map view to the searched location\n          this.leafletMap.setView([latitude, longitude], 13);\n          // Adding a marker at the searched location\n          L.marker([latitude, longitude], {\n            icon: L.icon({\n              iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\n              iconSize: [38, 48],\n              iconAnchor: [24, 48]\n            })\n          }).addTo(this.leafletMap).bindPopup('Searched Location').openPopup();\n        }\n      }).catch(error => {\n        console.error('Error fetching location:', error);\n      });\n    }\n  },\n  mounted() {\n    // Creating a Leaflet map and setting its initial view\n    const leafletMap = L.map(this.$refs.map).setView([51.505, -0.09], 13);\n\n    // Adding the OpenStreetMap tiles to the map\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(leafletMap);\n\n    // Removing the map when the component is unmounted\n    onUnmounted(() => {\n      leafletMap.remove();\n    });\n  }\n};","map":{"version":3,"names":["onUnmounted","L","data","searchQuery","leafletMap","methods","getUserLocation","searchLocation","accessToken","query","fetch","encodeURIComponent","then","response","json","longitude","latitude","features","center","setView","marker","icon","iconUrl","iconSize","iconAnchor","addTo","bindPopup","openPopup","catch","error","console","mounted","map","$refs","tileLayer","attribution","remove"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\MapContainorGraph.vue"],"sourcesContent":["<template>\r\n  <!-- Main Vue template -->\r\n  <div>\r\n    <!-- Farming content section -->\r\n    <div class=\"farmingContent\">\r\n      <h2>Farming and Agricultural Practices</h2>\r\n      <p>\r\n        Agriculture forms the backbone of communities, cultivating crops and fostering sustainable farming methods.\r\n        Streamlined delivery channels from farmers to consumers guarantee access to fresh, nutrient-rich produce, bolstering healthier lifestyles and backing regional economies.\r\n      </p>\r\n      <p>\r\n        Direct farm-to-consumer supply chains and optimized logistical networks bridge the divide between producers and buyers, ensuring transparent and high-quality food distribution.\r\n      </p>\r\n      <!-- Search section -->\r\n      <div class=\"searchSection\">\r\n        <!-- Input field for location search -->\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search a location\"\r\n          v-model=\"searchQuery\"\r\n          @keyup.enter=\"searchLocation\"\r\n        />\r\n        <!-- Search button -->\r\n        <button @click=\"searchLocation\">Search</button>\r\n        <!-- Button to get user's current location -->\r\n        <button @click=\"getUserLocation\">Get Current Location</button>\r\n      </div>\r\n    </div>\r\n    <!-- Map container -->\r\n    <div ref=\"map\" class=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Importing necessary Vue functions and Leaflet library\r\nimport {  onUnmounted } from 'vue';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '', // To store user's search input\r\n      leafletMap: null, // Reference to the Leaflet map\r\n    };\r\n  },\r\n  methods: {\r\n    // Function to get user's current location\r\n    getUserLocation() {\r\n      // Code to get user's location...\r\n    },\r\n    // Function to search for a location\r\n    searchLocation() {\r\n      const accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN'; // Replace with your Mapbox access token\r\n      const query = this.searchQuery;\r\n\r\n      // Fetching location data from Mapbox API based on the user's input\r\n      fetch(\r\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(query)}.json?access_token=${accessToken}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const [longitude, latitude] = data.features[0].center;\r\n\r\n          if (this.leafletMap) {\r\n            // Setting the map view to the searched location\r\n            this.leafletMap.setView([latitude, longitude], 13);\r\n            // Adding a marker at the searched location\r\n            L.marker([latitude, longitude], {\r\n              icon: L.icon({\r\n                iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\r\n                iconSize: [38, 48],\r\n                iconAnchor: [24, 48],\r\n              }),\r\n            })\r\n              .addTo(this.leafletMap)\r\n              .bindPopup('Searched Location')\r\n              .openPopup();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching location:', error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    // Creating a Leaflet map and setting its initial view\r\n    const leafletMap = L.map(this.$refs.map).setView([51.505, -0.09], 13);\r\n\r\n    // Adding the OpenStreetMap tiles to the map\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; OpenStreetMap contributors',\r\n    }).addTo(leafletMap);\r\n\r\n    // Removing the map when the component is unmounted\r\n    onUnmounted(() => {\r\n      leafletMap.remove();\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Styling for the map container */\r\n.mapContainer {\r\n  width: 95%;\r\n  height: 500px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n/* Styling for the farming content section */\r\n.farmingContent {\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n  margin-bottom: 50px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Styling for the search section */\r\n.searchSection {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Styling for the search input field */\r\n.searchSection input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n/* Styling for buttons */\r\nbutton {\r\n  margin-bottom: 16px;\r\n  padding: 10px 20px;\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n/* Media query for responsiveness */\r\n@media screen and (max-width: 600px) {\r\n  button {\r\n    padding: 8px 16px;\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAkCA;AACA,SAAUA,WAAU,QAAS,KAAK;AAElC,OAAO,0BAA0B;AACjC,OAAOC,CAAA,MAAO,SAAS;AAEvB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MAAE;MACjBC,UAAU,EAAE,IAAI,CAAE;IACpB,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACP;IACAC,eAAeA,CAAA,EAAG;MAChB;IAAA,CACD;IACD;IACAC,cAAcA,CAAA,EAAG;MACf,MAAMC,WAAU,GAAI,0BAA0B,EAAE;MAChD,MAAMC,KAAI,GAAI,IAAI,CAACN,WAAW;;MAE9B;MACAO,KAAK,CACF,qDAAoDC,kBAAkB,CAACF,KAAK,CAAE,sBAAqBD,WAAY,EAClH,EACGI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEV,IAAI,IAAK;QACd,MAAM,CAACa,SAAS,EAAEC,QAAQ,IAAId,IAAI,CAACe,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM;QAErD,IAAI,IAAI,CAACd,UAAU,EAAE;UACnB;UACA,IAAI,CAACA,UAAU,CAACe,OAAO,CAAC,CAACH,QAAQ,EAAED,SAAS,CAAC,EAAE,EAAE,CAAC;UAClD;UACAd,CAAC,CAACmB,MAAM,CAAC,CAACJ,QAAQ,EAAED,SAAS,CAAC,EAAE;YAC9BM,IAAI,EAAEpB,CAAC,CAACoB,IAAI,CAAC;cACXC,OAAO,EAAE,mEAAmE;cAC5EC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;YACrB,CAAC;UACH,CAAC,EACEC,KAAK,CAAC,IAAI,CAACrB,UAAU,EACrBsB,SAAS,CAAC,mBAAmB,EAC7BC,SAAS,CAAC,CAAC;QAChB;MACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR;IACA,MAAM3B,UAAS,GAAIH,CAAC,CAAC+B,GAAG,CAAC,IAAI,CAACC,KAAK,CAACD,GAAG,CAAC,CAACb,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;;IAErE;IACAlB,CAAC,CAACiC,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACV,KAAK,CAACrB,UAAU,CAAC;;IAEpB;IACAJ,WAAW,CAAC,MAAM;MAChBI,UAAU,CAACgC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}