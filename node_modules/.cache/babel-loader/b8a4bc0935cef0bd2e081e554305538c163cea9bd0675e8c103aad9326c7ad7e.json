{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nexport default {\n  setup() {\n    const map = ref(null);\n    onMounted(() => {\n      if (!map.value) return;\n      const leafletMap = L.map(map.value).setView([51.505, -0.09], 13);\n\n      // Example: Adding a tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(leafletMap);\n\n      // Continue with your Leaflet logic...\n\n      // Add current location functionality\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          const userCoords = [latitude, longitude];\n\n          // Wait until the map has finished loading before adding the marker\n          leafletMap.whenReady(() => {\n            L.marker(userCoords).addTo(leafletMap).bindPopup('Your Location').openPopup();\n            leafletMap.setView(userCoords, 13);\n          });\n        }, error => {\n          console.error('Error getting user location:', error);\n        });\n      } else {\n        console.log('Geolocation is not supported.');\n      }\n\n      // Cleanup on component unmount\n      onUnmounted(() => {\n        leafletMap.remove();\n      });\n    });\n    return {\n      map\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","L","setup","map","value","leafletMap","setView","tileLayer","attribution","addTo","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","userCoords","whenReady","marker","bindPopup","openPopup","error","console","log","remove"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\MapContainerway.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"farmingContent\">\r\n      <!-- Your content here -->\r\n    </div>\r\n    <div ref=\"map\" class=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  setup() {\r\n    const map = ref(null);\r\n\r\n    onMounted(() => {\r\n      if (!map.value) return;\r\n\r\n      const leafletMap = L.map(map.value).setView([51.505, -0.09], 13);\r\n\r\n      // Example: Adding a tile layer\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; OpenStreetMap contributors'\r\n      }).addTo(leafletMap);\r\n\r\n      // Continue with your Leaflet logic...\r\n\r\n      // Add current location functionality\r\n      if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            const userCoords = [latitude, longitude];\r\n\r\n            // Wait until the map has finished loading before adding the marker\r\n            leafletMap.whenReady(() => {\r\n              L.marker(userCoords).addTo(leafletMap).bindPopup('Your Location').openPopup();\r\n              leafletMap.setView(userCoords, 13);\r\n            });\r\n          },\r\n          (error) => {\r\n            console.error('Error getting user location:', error);\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Geolocation is not supported.');\r\n      }\r\n\r\n      // Cleanup on component unmount\r\n      onUnmounted(() => {\r\n        leafletMap.remove();\r\n      });\r\n    });\r\n\r\n    return { map };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style>\r\n.mapContainer {\r\n  width: 95%;\r\n  height: 500px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.farmingContent {\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":"AAUA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,OAAO,0BAA0B;AACjC,OAAOC,CAAA,MAAO,SAAS;AAEvB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,GAAE,GAAIL,GAAG,CAAC,IAAI,CAAC;IAErBC,SAAS,CAAC,MAAM;MACd,IAAI,CAACI,GAAG,CAACC,KAAK,EAAE;MAEhB,MAAMC,UAAS,GAAIJ,CAAC,CAACE,GAAG,CAACA,GAAG,CAACC,KAAK,CAAC,CAACE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;;MAEhE;MACAL,CAAC,CAACM,SAAS,CAAC,oDAAoD,EAAE;QAChEC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,KAAK,CAACJ,UAAU,CAAC;;MAEpB;;MAEA;MACA,IAAI,aAAY,IAAKK,SAAS,EAAE;QAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZ,MAAM;YAAEC,QAAQ;YAAEC;UAAU,IAAIF,QAAQ,CAACG,MAAM;UAC/C,MAAMC,UAAS,GAAI,CAACH,QAAQ,EAAEC,SAAS,CAAC;;UAExC;UACAV,UAAU,CAACa,SAAS,CAAC,MAAM;YACzBjB,CAAC,CAACkB,MAAM,CAACF,UAAU,CAAC,CAACR,KAAK,CAACJ,UAAU,CAAC,CAACe,SAAS,CAAC,eAAe,CAAC,CAACC,SAAS,CAAC,CAAC;YAC7EhB,UAAU,CAACC,OAAO,CAACW,UAAU,EAAE,EAAE,CAAC;UACpC,CAAC,CAAC;QACJ,CAAC,EACAK,KAAK,IAAK;UACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD,CACF,CAAC;MACH,OAAO;QACLC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C;;MAEA;MACAxB,WAAW,CAAC,MAAM;QAChBK,UAAU,CAACoB,MAAM,CAAC,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MAAEtB;IAAI,CAAC;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}