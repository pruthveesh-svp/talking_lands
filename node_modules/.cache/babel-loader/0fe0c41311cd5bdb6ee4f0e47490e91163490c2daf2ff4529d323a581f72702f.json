{"ast":null,"code":"export default {\n  data() {\n    return {\n      products: [{\n        name: 'Apples',\n        price: 25,\n        quantity: 50,\n        image: require('@/assets/apple.jpg')\n      }, {\n        name: 'Oranges',\n        price: 30,\n        quantity: 30,\n        image: require('@/assets/orrage.jpg')\n      }, {\n        name: 'Bananas',\n        price: 40,\n        quantity: 20,\n        image: require('@/assets/tomato.jpg')\n      }, {\n        name: 'Grapes',\n        price: 50,\n        quantity: 25,\n        image: require('@/assets/papaya.jpg')\n      }],\n      orderQuantities: [],\n      marketProduct: 'Apples',\n      marketPrice: 0\n    };\n  },\n  methods: {\n    placeOrder(index) {\n      const orderedQuantity = this.orderQuantities[index];\n      if (orderedQuantity > 0 && orderedQuantity <= this.products[index].quantity) {\n        const totalPrice = orderedQuantity * this.products[index].price;\n        this.products[index].quantity -= orderedQuantity;\n        alert(`Order placed for ${orderedQuantity} ${this.products[index].name} for a total of $${totalPrice}`);\n        this.orderQuantities[index] = 0;\n      } else {\n        alert('Invalid quantity or not enough in stock!');\n      }\n    },\n    fetchMarketPrice() {\n      this.marketPrice = Math.random() * 10;\n    },\n    getImageSource(image) {\n      if (image.startsWith('@/assets/')) {\n        return require(`@/${image}`);\n      } else {\n        return image;\n      }\n    }\n  },\n  created() {\n    this.fetchMarketPrice();\n  }\n};","map":{"version":3,"names":["data","products","name","price","quantity","image","require","orderQuantities","marketProduct","marketPrice","methods","placeOrder","index","orderedQuantity","totalPrice","alert","fetchMarketPrice","Math","random","getImageSource","startsWith","created"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\GraphDesign.vue"],"sourcesContent":["<template>\r\n  <div class=\"container1\">\r\n    <h1>\r\n      <span class=\"farmers\">Farmers</span>\r\n      <span class=\"market\">Market</span>\r\n    </h1>\r\n  </div>\r\n  <div class=\"container\">\r\n    \r\n    <div v-for=\"(_, index) in products\" :key=\"index\" class=\"product\">\r\n      <img :src=\"getImageSource(products[index].image)\" :alt=\"products[index].name\" class=\"product-image\" />\r\n      <div class=\"product-details\">\r\n        <h2>{{ products[index].name }}</h2>\r\n        <p>Price: Rs{{ products[index].price }}</p>\r\n        <p>Available Quantity: {{ products[index].quantity }}</p>\r\n        <!-- Input for customer order -->\r\n        <div v-if=\"products[index].quantity > 0\">\r\n          <label for=\"orderQty\">Order Quantity:</label>\r\n          <input type=\"number\" v-model=\"orderQuantities[index]\" min=\"0\" :max=\"products[index].quantity\" />\r\n          <button @click=\"placeOrder(index)\">Place Order</button>\r\n        </div>\r\n      </div>\r\n      <hr class=\"divider\" />\r\n    </div>\r\n    <h2>Market Price Details</h2>\r\n    <p v-if=\"marketPrice\">Market Price for {{ marketProduct }}: Rs{{ marketPrice }}</p>\r\n    <p v-else>No market price available for {{ marketProduct }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [\r\n        { name: 'Apples', price: 25, quantity: 50, image: require('@/assets/apple.jpg') },\r\n        { name: 'Oranges', price: 30, quantity: 30, image: require('@/assets/orrage.jpg')  },\r\n        { name: 'Bananas', price: 40, quantity: 20, image: require('@/assets/tomato.jpg')  },\r\n        { name: 'Grapes', price: 50, quantity: 25, image: require('@/assets/papaya.jpg')  },\r\n      ],\r\n      orderQuantities: [], \r\n      marketProduct: 'Apples', \r\n      marketPrice: 0 \r\n    };\r\n  },\r\n  methods: {\r\n    placeOrder(index) {\r\n      const orderedQuantity = this.orderQuantities[index];\r\n      if (orderedQuantity > 0 && orderedQuantity <= this.products[index].quantity) {\r\n        const totalPrice = orderedQuantity * this.products[index].price;\r\n\r\n        this.products[index].quantity -= orderedQuantity;\r\n\r\n        alert(`Order placed for ${orderedQuantity} ${this.products[index].name} for a total of $${totalPrice}`);\r\n\r\n        this.orderQuantities[index] = 0;\r\n      } else {\r\n        alert('Invalid quantity or not enough in stock!');\r\n      }\r\n    },\r\n    fetchMarketPrice() {\r\n      \r\n      this.marketPrice = Math.random() * 10; \r\n    },\r\n    getImageSource(image) {\r\n    \r\n      if (image.startsWith('@/assets/')) {\r\n        return require(`@/${image}`);\r\n      } else {\r\n        return image;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchMarketPrice();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100vw;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n    text-align: center;\r\n\r\n  background-color: #f7f7f7;\r\n  overflow-y: auto;\r\n}\r\n.container1 {\r\n    text-align: center;\r\n \r\n}\r\n\r\n.product {\r\n  width: calc(25% - 20px);\r\n  min-width: 200px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.product:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  transition: filter 0.3s ease;\r\n}\r\n\r\n.product:hover .product-image {\r\n  filter: brightness(80%);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-details {\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product h2 {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product p {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.product button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  margin-top: 20px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.product button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.divider {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ccc;\r\n}\r\n.farmers {\r\n  color: #ff6347; \r\n}\r\n\r\n.market {\r\n  color: #4682b4; \r\n}\r\n</style>\r\n\r\n"],"mappings":"AA+BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAEC,OAAO,CAAC,oBAAoB;MAAE,CAAC,EACjF;QAAEJ,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAEC,OAAO,CAAC,qBAAqB;MAAG,CAAC,EACpF;QAAEJ,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAEC,OAAO,CAAC,qBAAqB;MAAG,CAAC,EACpF;QAAEJ,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAEC,OAAO,CAAC,qBAAqB;MAAG,CAAC,CACpF;MACDC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE,QAAQ;MACvBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAE;MAChB,MAAMC,eAAc,GAAI,IAAI,CAACN,eAAe,CAACK,KAAK,CAAC;MACnD,IAAIC,eAAc,GAAI,KAAKA,eAAc,IAAK,IAAI,CAACZ,QAAQ,CAACW,KAAK,CAAC,CAACR,QAAQ,EAAE;QAC3E,MAAMU,UAAS,GAAID,eAAc,GAAI,IAAI,CAACZ,QAAQ,CAACW,KAAK,CAAC,CAACT,KAAK;QAE/D,IAAI,CAACF,QAAQ,CAACW,KAAK,CAAC,CAACR,QAAO,IAAKS,eAAe;QAEhDE,KAAK,CAAE,oBAAmBF,eAAe,IAAI,IAAI,CAACZ,QAAQ,CAACW,KAAK,CAAC,CAACV,IAAI,oBAAoBY,UAAW,EAAC,CAAC;QAEvG,IAAI,CAACP,eAAe,CAACK,KAAK,IAAI,CAAC;MACjC,OAAO;QACLG,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MAEjB,IAAI,CAACP,WAAU,GAAIQ,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE;IACvC,CAAC;IACDC,cAAcA,CAACd,KAAK,EAAE;MAEpB,IAAIA,KAAK,CAACe,UAAU,CAAC,WAAW,CAAC,EAAE;QACjC,OAAOd,OAAO,CAAE,KAAID,KAAM,EAAC,CAAC;MAC9B,OAAO;QACL,OAAOA,KAAK;MACd;IACF;EACF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACL,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}