{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      map: null,\n      leafletMap: null\n    };\n  },\n  methods: {\n    getUserLocation() {\n      // Code to get user's location...\n    },\n    searchLocation() {\n      const accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN'; // Replace with your Mapbox access token\n      const query = this.searchQuery;\n      fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(query)}.json?access_token=${accessToken}`).then(response => response.json()).then(data => {\n        const [longitude, latitude] = data.features[0].center;\n        if (this.leafletMap) {\n          this.leafletMap.setView([latitude, longitude], 13);\n          L.marker([latitude, longitude], {\n            icon: L.icon({\n              iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\n              iconSize: [38, 48],\n              iconAnchor: [24, 48]\n            })\n          }).addTo(this.leafletMap).bindPopup('Searched Location').openPopup();\n        }\n      }).catch(error => {\n        console.error('Error fetching location:', error);\n      });\n    }\n  },\n  mounted() {\n    this.leafletMap = L.map(this.$refs.map).setView([51.505, -0.09], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(this.leafletMap);\n    onUnmounted(() => {\n      this.leafletMap.remove();\n    });\n    return {\n      map,\n      leafletMap\n    }; // Return variables used in template\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","L","data","searchQuery","map","leafletMap","methods","getUserLocation","searchLocation","accessToken","query","fetch","encodeURIComponent","then","response","json","longitude","latitude","features","center","setView","marker","icon","iconUrl","iconSize","iconAnchor","addTo","bindPopup","openPopup","catch","error","console","mounted","$refs","tileLayer","attribution","remove"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\MapContainorGraph.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"farmingContent\">\r\n      <h2>Farming and Agricultural Practices</h2>\r\n      <p>\r\n        Agriculture forms the backbone of communities, cultivating crops and fostering sustainable farming methods.\r\n        Streamlined delivery channels from farmers to consumers guarantee access to fresh, nutrient-rich produce, bolstering healthier lifestyles and backing regional economies.\r\n      </p>\r\n      <p>\r\n        Direct farm-to-consumer supply chains and optimized logistical networks bridge the divide between producers and buyers, ensuring transparent and high-quality food distribution.\r\n      </p>\r\n      <div class=\"searchSection\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search a location\"\r\n          v-model=\"searchQuery\"\r\n          @keyup.enter=\"searchLocation\"\r\n        />\r\n        <button @click=\"searchLocation\">Search</button>\r\n        <button @click=\"getUserLocation\">Get Current Location</button>\r\n      </div>\r\n    </div>\r\n    <div ref=\"map\" class=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      map: null,\r\n      leafletMap: null,\r\n    };\r\n  },\r\n  methods: {\r\n    getUserLocation() {\r\n      // Code to get user's location...\r\n    },\r\n    searchLocation() {\r\n      const accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN'; // Replace with your Mapbox access token\r\n      const query = this.searchQuery;\r\n\r\n      fetch(\r\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(\r\n          query\r\n        )}.json?access_token=${accessToken}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const [longitude, latitude] = data.features[0].center;\r\n\r\n          if (this.leafletMap) {\r\n            this.leafletMap.setView([latitude, longitude], 13);\r\n            L.marker([latitude, longitude], {\r\n              icon: L.icon({\r\n                iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\r\n                iconSize: [38, 48],\r\n                iconAnchor: [24, 48],\r\n              }),\r\n            })\r\n              .addTo(this.leafletMap)\r\n              .bindPopup('Searched Location')\r\n              .openPopup();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching location:', error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.leafletMap = L.map(this.$refs.map).setView([51.505, -0.09], 13);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; OpenStreetMap contributors',\r\n    }).addTo(this.leafletMap);\r\n\r\n    onUnmounted(() => {\r\n      this.leafletMap.remove();\r\n    });\r\n        return { map, leafletMap }; // Return variables used in template\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.mapContainer {\r\n  width: 95%;\r\n  height: 500px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.farmingContent {\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n  margin-bottom: 50px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.searchSection {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.searchSection input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  margin-bottom: 16px;\r\n  padding: 10px 20px;\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  button {\r\n    padding: 8px 16px;\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,OAAO,0BAA0B;AACjC,OAAOC,CAAA,MAAO,SAAS;AAEvB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,GAAG,EAAE,IAAI;MACTC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB;IAAA,CACD;IACDC,cAAcA,CAAA,EAAG;MACf,MAAMC,WAAU,GAAI,0BAA0B,EAAE;MAChD,MAAMC,KAAI,GAAI,IAAI,CAACP,WAAW;MAE9BQ,KAAK,CACF,qDAAoDC,kBAAkB,CACrEF,KACF,CAAE,sBAAqBD,WAAY,EACrC,EACGI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEX,IAAI,IAAK;QACd,MAAM,CAACc,SAAS,EAAEC,QAAQ,IAAIf,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM;QAErD,IAAI,IAAI,CAACd,UAAU,EAAE;UACnB,IAAI,CAACA,UAAU,CAACe,OAAO,CAAC,CAACH,QAAQ,EAAED,SAAS,CAAC,EAAE,EAAE,CAAC;UAClDf,CAAC,CAACoB,MAAM,CAAC,CAACJ,QAAQ,EAAED,SAAS,CAAC,EAAE;YAC9BM,IAAI,EAAErB,CAAC,CAACqB,IAAI,CAAC;cACXC,OAAO,EAAE,mEAAmE;cAC5EC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;YACrB,CAAC;UACH,CAAC,EACEC,KAAK,CAAC,IAAI,CAACrB,UAAU,EACrBsB,SAAS,CAAC,mBAAmB,EAC7BC,SAAS,CAAC,CAAC;QAChB;MACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC3B,UAAS,GAAIJ,CAAC,CAACG,GAAG,CAAC,IAAI,CAAC6B,KAAK,CAAC7B,GAAG,CAAC,CAACgB,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;IAEpEnB,CAAC,CAACiC,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACT,KAAK,CAAC,IAAI,CAACrB,UAAU,CAAC;IAEzBL,WAAW,CAAC,MAAM;MAChB,IAAI,CAACK,UAAU,CAAC+B,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC;IACE,OAAO;MAAEhC,GAAG;MAAEC;IAAW,CAAC,EAAE;EAElC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}