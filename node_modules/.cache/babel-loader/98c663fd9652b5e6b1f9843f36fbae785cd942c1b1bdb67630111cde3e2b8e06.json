{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"farmingContent\"\n}, [/*#__PURE__*/_createCommentVNode(\" Your content here \")], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  ref: \"map\",\n  class: \"mapContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\MapContainerway.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"farmingContent\">\r\n      <!-- Your content here -->\r\n    </div>\r\n    <div ref=\"map\" class=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  setup() {\r\n    const map = ref(null);\r\n\r\n    onMounted(() => {\r\n      if (!map.value) return;\r\n\r\n      const leafletMap = L.map(map.value).setView([51.505, -0.09], 13);\r\n\r\n      // Your Leaflet logic goes here...\r\n\r\n      // Example: Adding a marker\r\n      L.marker([51.505, -0.09]).addTo(leafletMap);\r\n\r\n      // Example: Adding a tile layer\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; OpenStreetMap contributors'\r\n      }).addTo(leafletMap);\r\n\r\n      // Continue with your Leaflet logic...\r\n\r\n      // Add current location functionality\r\n      if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            const userCoords = [latitude, longitude];\r\n            L.marker(userCoords).addTo(leafletMap).bindPopup('Your Location').openPopup();\r\n            leafletMap.setView(userCoords, 13);\r\n          },\r\n          (error) => {\r\n            console.error('Error getting user location:', error);\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Geolocation is not supported.');\r\n      }\r\n\r\n      // Cleanup on component unmount\r\n      onUnmounted(() => {\r\n        leafletMap.remove();\r\n      });\r\n    });\r\n\r\n    return { map };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n.mapContainer {\r\n  width: 95%;\r\n  height: 500px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.farmingContent {\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAgB,I,aACzBC,mBAAA,uBAA0B,C;;EAEvBC,GAAG,EAAC,KAAK;EAACF,KAAK,EAAC;;;uBAJvBG,mBAAA,CAKM,cAJJC,UAEM,EACNL,mBAAA,CAA0C,OAA1CM,UAA0C,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}