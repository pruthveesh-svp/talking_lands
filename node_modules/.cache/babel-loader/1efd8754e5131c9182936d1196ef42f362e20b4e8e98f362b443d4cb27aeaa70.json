{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"left-side\\\"><h1 class=\\\"heading\\\"><span class=\\\"green-text\\\">Farming</span> and <span class=\\\"blue-text\\\">Supply</span></h1><p class=\\\"description\\\"> Exploring the world of agriculture and its supply chain to consumers. </p></div>\", 1);\nconst _hoisted_3 = {\n  class: \"right-side\"\n};\nconst _hoisted_4 = [\"autoplay\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Left side heading \"), _hoisted_2, _createCommentVNode(\" Right side with animated video \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Embedded video from assets \"), _createElementVNode(\"div\", {\n    class: \"video-container\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleAutoplay && $options.toggleAutoplay(...args))\n  }, [_createElementVNode(\"video\", {\n    ref: \"videoPlayer\",\n    controls: \"\",\n    autoplay: $data.autoplay,\n    muted: \"\",\n    loop: \"\",\n    width: \"480\",\n    height: \"270\"\n  }, [_createElementVNode(\"source\", {\n    src: $data.videoSource,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_5), _createTextVNode(\" Your browser does not support the video tag. \")], 8 /* PROPS */, _hoisted_4)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_createElementVNode","_hoisted_3","onClick","_cache","args","$options","toggleAutoplay","ref","controls","autoplay","$data","muted","loop","width","height","src","videoSource","type"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\ResponsiveWay.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- Left side heading -->\r\n    <div class=\"left-side\">\r\n      <h1 class=\"heading\">\r\n        <span class=\"green-text\">Farming</span> and <span class=\"blue-text\">Supply</span>\r\n      </h1>\r\n      <p class=\"description\">\r\n        Exploring the world of agriculture and its supply chain to consumers.\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Right side with animated video -->\r\n    <div class=\"right-side\">\r\n      <!-- Embedded video from assets -->\r\n      <div class=\"video-container\" @click=\"toggleAutoplay\">\r\n        <video ref=\"videoPlayer\" controls :autoplay=\"autoplay\" muted loop width=\"480\" height=\"270\">\r\n          <source :src=\"videoSource\" type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      videoSource: require('@/assets/vedio.mp4'), // Adjust the path to your video\r\n      autoplay: true,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleAutoplay() {\r\n      this.autoplay = !this.autoplay;\r\n      const video = this.$refs.videoPlayer;\r\n      if (this.autoplay) {\r\n        video.play();\r\n      } else {\r\n        video.pause();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.left-side {\r\n  flex: 1;\r\n  padding: 20px;\r\n  color: #333;\r\n}\r\n\r\n.right-side {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.heading {\r\n  font-size: 3rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.green-text {\r\n  color: green;\r\n}\r\n\r\n.blue-text {\r\n  color: blue;\r\n}\r\n\r\n.description {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.video-container {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Added media query for responsiveness */\r\n@media screen and (max-width: 768px) {\r\n  .container {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .left-side {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .video-container {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;EAYfA,KAAK,EAAC;AAAY;;;;uBAZzBC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,uBAA0B,EAC1BC,UAOM,EAEND,mBAAA,oCAAuC,EACvCE,mBAAA,CAQM,OARNC,UAQM,GAPJH,mBAAA,gCAAmC,EACnCE,mBAAA,CAKM;IALDL,KAAK,EAAC,iBAAiB;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACjDJ,mBAAA,CAGQ;IAHDO,GAAG,EAAC,aAAa;IAACC,QAAQ,EAAR,EAAQ;IAAEC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAEE,KAAK,EAAL,EAAK;IAACC,IAAI,EAAJ,EAAI;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;MACnFd,mBAAA,CAA8C;IAArCe,GAAG,EAAEL,KAAA,CAAAM,WAAW;IAAEC,IAAI,EAAC;wDAAc,gDAEhD,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}