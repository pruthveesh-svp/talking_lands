{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nconst farmersMarkets = ref([]);\nexport default {\n  setup() {\n    const map = ref(null);\n    let leafletMap = null;\n    const googleMapImageUrl = ref('');\n    const googleIcon = L.icon({\n      iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\n      iconSize: [38, 48],\n      iconAnchor: [24, 48]\n    });\n    const fetchFarmersMarkets = async (latitude, longitude) => {\n      try {\n        const response = await fetch(`https://search.ams.usda.gov/farmersmarkets/v1/data.svc/locSearch?lat=${latitude}&lng=${longitude}`);\n        const data = await response.json();\n        farmersMarkets.value = data.results || [];\n      } catch (error) {\n        console.error('Error fetching farmers markets:', error);\n        farmersMarkets.value = [];\n      }\n    };\n    const getUserLocation = async () => {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          const userCoords = [latitude, longitude];\n          if (leafletMap) {\n            L.marker(userCoords, {\n              icon: googleIcon\n            }).addTo(leafletMap).bindPopup('Your Location').openPopup();\n            leafletMap.setView(userCoords, 13);\n          }\n          await fetchFarmersMarkets(latitude, longitude);\n          displayFarmersMarketsOnMap();\n        }, error => {\n          console.error('Error getting user location:', error);\n        });\n      } else {\n        console.log('Geolocation is not supported.');\n      }\n    };\n    const displayFarmersMarketsOnMap = () => {\n      if (leafletMap && farmersMarkets.value.length > 0) {\n        farmersMarkets.value.forEach(market => {\n          const {\n            latitude,\n            longitude,\n            marketname,\n            distance\n          } = market;\n          const marketCoords = [latitude, longitude];\n          const marketIcon = L.icon({\n            iconUrl: 'market-icon.png',\n            iconSize: [32, 32],\n            iconAnchor: [16, 16]\n          });\n          L.marker(marketCoords, {\n            icon: marketIcon\n          }).addTo(leafletMap).bindPopup(`<b>${marketname}</b><br>Distance: ${distance}`).openPopup();\n        });\n      }\n    };\n    onMounted(() => {\n      if (!map.value) return;\n      leafletMap = L.map(map.value).setView([51.505, -0.09], 13);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(leafletMap);\n      onUnmounted(() => {\n        leafletMap.remove();\n      });\n    });\n    return {\n      map,\n      getUserLocation,\n      googleMapImageUrl\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","L","farmersMarkets","setup","map","leafletMap","googleMapImageUrl","googleIcon","icon","iconUrl","iconSize","iconAnchor","fetchFarmersMarkets","latitude","longitude","response","fetch","data","json","value","results","error","console","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","userCoords","marker","addTo","bindPopup","openPopup","setView","displayFarmersMarketsOnMap","log","length","forEach","market","marketname","distance","marketCoords","marketIcon","tileLayer","attribution","remove"],"sources":["C:\\Users\\Admin\\Desktop\\talkinglands\\vue\\project-name\\src\\components\\MapContainerway.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"farmingContent\">\r\n      <h2>Farming and Crop Delivery</h2>\r\n      <p>\r\n        Farming sustains communities by producing crops and fostering agricultural practices.\r\n        From the farmer's fields to the customer's table, a robust delivery system ensures\r\n        fresh and quality produce reaches consumers.\r\n      </p>\r\n      <p>\r\n        Efforts in logistics and distribution, including transportation networks and market \r\n        accessibility, play a vital role in delivering farm-fresh products promptly and efficiently.\r\n      </p>\r\n      <button @click=\"getUserLocation\">Get Current Location</button>\r\n    </div>\r\n    <div ref=\"map\" class=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n    const farmersMarkets = ref([]);\r\n\r\n\r\nexport default {\r\n  setup() {\r\n    const map = ref(null);\r\n    let leafletMap = null;\r\n    const googleMapImageUrl = ref('');\r\n\r\n    const googleIcon = L.icon({\r\n      iconUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png',\r\n      iconSize: [38, 48],\r\n      iconAnchor: [24, 48],\r\n    });\r\n  const fetchFarmersMarkets = async (latitude, longitude) => {\r\n      try {\r\n        const response = await fetch(`https://search.ams.usda.gov/farmersmarkets/v1/data.svc/locSearch?lat=${latitude}&lng=${longitude}`);\r\n        const data = await response.json();\r\n        farmersMarkets.value = data.results || [];\r\n      } catch (error) {\r\n        console.error('Error fetching farmers markets:', error);\r\n        farmersMarkets.value = [];\r\n      }\r\n    };\r\n\r\n    const getUserLocation = async () => {\r\n      if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          async (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            const userCoords = [latitude, longitude];\r\n\r\n            if (leafletMap) {\r\n              L.marker(userCoords, { icon: googleIcon }).addTo(leafletMap).bindPopup('Your Location').openPopup();\r\n              leafletMap.setView(userCoords, 13);\r\n            }\r\n\r\n            await fetchFarmersMarkets(latitude, longitude);\r\n            displayFarmersMarketsOnMap();\r\n          },\r\n          (error) => {\r\n            console.error('Error getting user location:', error);\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Geolocation is not supported.');\r\n      }\r\n    };\r\n\r\n    const displayFarmersMarketsOnMap = () => {\r\n      if (leafletMap && farmersMarkets.value.length > 0) {\r\n        farmersMarkets.value.forEach(market => {\r\n          const { latitude, longitude, marketname, distance } = market;\r\n          const marketCoords = [latitude, longitude];\r\n\r\n          const marketIcon = L.icon({\r\n            iconUrl: 'market-icon.png',\r\n            iconSize: [32, 32],\r\n            iconAnchor: [16, 16],\r\n          });\r\n\r\n          L.marker(marketCoords, { icon: marketIcon })\r\n            .addTo(leafletMap)\r\n            .bindPopup(`<b>${marketname}</b><br>Distance: ${distance}`)\r\n            .openPopup();\r\n        });\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (!map.value) return;\r\n\r\n      leafletMap = L.map(map.value).setView([51.505, -0.09], 13);\r\n\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; OpenStreetMap contributors'\r\n      }).addTo(leafletMap);\r\n\r\n      onUnmounted(() => {\r\n        leafletMap.remove();\r\n      });\r\n    });\r\n\r\n    return { map, getUserLocation, googleMapImageUrl };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style>\r\n.mapContainer {\r\n  width: 95%;\r\n  height: 500px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.farmingContent {\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n    margin-bottom: 50px;\r\n\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton {\r\n  margin-bottom: 16px;\r\n  padding: 10px 20px;\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n/* Media query for responsiveness */\r\n@media screen and (max-width: 600px) {\r\n  button {\r\n    padding: 8px 16px;\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}